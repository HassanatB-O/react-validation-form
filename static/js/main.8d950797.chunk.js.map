{"version":3,"sources":["static/index.js","components/SignUp/signup.js","components/signIn/index.js","components/signIn/sign-in.js","components/Home/Home.js","App.js","reportWebVitals.js","index.js"],"names":["content","inputs","label","name","type","SignUp","schema","yup","shape","fullname","required","min","email","password","matches","_useForm","useForm","resolver","yupResolver","register","handleSubmit","errors","formState","react_default","a","createElement","className","onSubmit","data","console","log","alert","document","querySelectorAll","forEach","input","value","map","key","htmlFor","Object","assign","message","for","id","dist","to","signInContent","SignIn","Home","App","react_router_dist","path","element","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.8d950797.chunk.js","sourcesContent":["const content = {\r\n    inputs: [ \r\n        {\r\n            label: \"Full Name\",\r\n            name: \"fullname\",\r\n            type: \"text\"\r\n        },\r\n        {\r\n            label: \"Email\",\r\n            name: \"email\",\r\n            type: \"email\"\r\n        },\r\n        {\r\n            label: \"Password\",\r\n            name: \"password\",\r\n            type: \"password\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport default content","import React from \"react\";\r\nimport './signup.css';\r\nimport content from \"../../static\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\"\r\nimport * as yup from \"yup\"\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function SignUp(){\r\n\r\n\r\n    const schema = yup.object().shape(\r\n        {\r\n            fullname: yup.string().required().min(6),\r\n            email: yup.string().required('Please enter a valid email'),\r\n            password: yup.string().required(\"Please enter password\").matches(\r\n                /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}/,\r\n            \"Must contain 8 characters, One Capital Letter, One Lowercase, One Number and One Special Case Character\")\r\n        }\r\n    )\r\n\r\n    const {register, handleSubmit, formState: {errors}} = useForm(\r\n        {\r\n            resolver: yupResolver(schema)\r\n        }\r\n    )\r\n\r\n    const onSubmit = (data) =>{ \r\n        console.log(data)\r\n        alert(\"You have successfully submitted this form\")\r\n        document.querySelectorAll(\"input\").forEach(input=>{\r\n            input.value = \"\"\r\n        })\r\n    }\r\n\r\n\r\n    return(\r\n        <div className=\"sign-up\">\r\n        <h1>Don't have an account?</h1>\r\n        <h2>Sign up here!</h2>\r\n        <form onSubmit={handleSubmit(onSubmit)}>\r\n            {content.inputs.map((input, key) =>{\r\n                return(\r\n                    <div key={key}>                        \r\n                        <label htmlFor={input.name}>{input.label}</label>\r\n                        <br/>\r\n                        <input type={input.type} name={input.name} {...register(input.name)} className=\"input\"/>\r\n                        <br/>\r\n                        <span className=\"message\">{errors[input.name] && errors[input.name].message}</span>\r\n                    </div>\r\n                )\r\n            })}            \r\n            <label for=\"options\">User Type:</label>\r\n            <select id=\"options\">\r\n                <option value=\"Developer\">Developer</option>\r\n                <option value=\"Owner\">Owner</option>\r\n            </select>\r\n            <br/>\r\n            <button>SIGN UP</button>\r\n            </form>\r\n            <p>Have an account? <Link to='/sign-in'><span className=\"sign\">Sign In</span></Link>.</p>\r\n            <p>Back to <Link to='/react-validation-form'>Home</Link></p>\r\n        </div>\r\n    )\r\n}\r\n","const signInContent = {\r\n    inputs: [ \r\n        {\r\n            label: \"Email\",\r\n            name: \"email\",\r\n            type: \"text\"\r\n        },\r\n        {\r\n            label: \"Password\",\r\n            name: \"password\",\r\n            type: \"password\"\r\n        },\r\n        {\r\n            label: \"Project Name\",\r\n            name: \"name\",\r\n            type: \"text\"\r\n        }\r\n    ]\r\n}\r\n\r\nexport default signInContent","import React from \"react\";\r\nimport './sign-in.css';\r\nimport signInContent from \".\";\r\nimport { useForm } from \"react-hook-form\";\r\nimport { yupResolver } from \"@hookform/resolvers/yup\"\r\nimport * as yup from \"yup\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default function SignIn(){\r\n\r\n    const schema = yup.object().shape(\r\n        {\r\n            name: yup.string().required().min(6),\r\n            email: yup.string().required('Please enter a valid email'),\r\n            password: yup.string().required(\"Please enter password\").matches(\r\n                /^(?=.*[A-Za-z])(?=.*\\d)(?=.*[@$!%*#?&])[A-Za-z\\d@$!%*#?&]{8,}/,\r\n            \"Must contain 8 characters, One Capital Letter, One Lowercase, One Number and One Special Case Character\")\r\n        }\r\n    )\r\n\r\n    const {register, handleSubmit, formState: {errors}} = useForm(\r\n        {\r\n            resolver: yupResolver(schema)\r\n        }\r\n    )\r\n\r\n    const onSubmit = (data) =>{\r\n        console.log(data)\r\n        alert(\"You have successfully submitted this form\")\r\n        document.querySelectorAll(\"input\").forEach(input=>{\r\n            input.value = \"\"\r\n        })\r\n    }\r\n\r\n    return(\r\n        <div className=\"sign-in\">\r\n            <h1>Already have an account?</h1>\r\n            <h2>Sign In here</h2>\r\n            <form onSubmit={handleSubmit(onSubmit)}>\r\n                {signInContent.inputs.map((input, key) =>{\r\n                    return(\r\n                        <div key={key}>\r\n                            <label htmlFor={input.name}>{input.label}</label>\r\n                            <br/>\r\n                            <input type={input.type} name={input.name} {...register(input.name)} className=\"input\"/>\r\n                            <br/>\r\n                            <span className=\"message\">{errors[input.name] && errors[input.name].message}</span>\r\n                        </div>\r\n                    )\r\n                })}\r\n                <button>SIGN IN</button>\r\n            </form>\r\n            <p>Don't have an account? <Link to='/sign-up'><span className=\"sign\">Sign Up</span></Link>.</p>\r\n            <p>Back to <Link to='/react-validation-form'>Home</Link></p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './home.css'\r\n\r\nexport default function Home() {\r\n  return (\r\n    <div className='home'>\r\n        <h1>WELCOME TO CHATSCRUM</h1>\r\n        <div className='links'>\r\n            <Link to=\"/sign-up\"><h4>SIGN UP</h4></Link>\r\n            <Link to='/sign-in'><h4>SIGN IN</h4></Link>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n","import './App.css';\nimport React from 'react';\nimport SignUp from './components/SignUp/signup';\nimport SignIn from './components/signIn/sign-in';\nimport Home from './components/Home/Home';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom'\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <div className=\"App\">\n      <Routes>          \n          <Route path='/' element={<Home/>}/>\n          <Route path='/sign-up' element={<SignUp/>}/>\n          <Route path='/sign-in' element={<SignIn/>}/>          \n        </Routes>\n      </div>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}